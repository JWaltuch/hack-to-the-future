{"version":3,"sources":["Form.js","App.js","index.js","secrets.js"],"names":["Form","props","onChange","event","handleChange","htmlFor","name","type","index","algoliasearch","algoliaKey","searchKey","initIndex","App","state","emojis","bind","fetch","then","response","json","products","saveObjects","autoGenerateObjectIDIfNotExist","preventDefault","search","target","value","hits","Object","values","forEach","hit","console","log","newState","push","descrip","definition","unicode","split","map","x","replace","join","setState","className","this","emoji","class","key","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQAEaA,EAAO,SAAAC,GAClB,OACE,0BACEC,SAAU,SAAAC,GACRF,EAAMG,aAAaD,KAGrB,2BAAOE,QAAQ,UAAf,yBACA,2BAAOC,KAAK,SAASC,KAAK,W,cCD1BC,E,MAFSC,GAAcC,aAAYC,aAEpBC,UAAU,UA4DhBC,E,kDAzDb,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IACDa,MAAQ,CAAEC,OAAQ,IACvB,EAAKX,aAAe,EAAKA,aAAaY,KAAlB,gBAHH,E,gEAOjBC,MAAM,8BACHC,MAAK,SAASC,GACb,OAAOA,EAASC,UAEjBF,MAAK,SAASG,GACb,OAAOb,EAAMc,YAAYD,EAAU,CACjCE,gCAAgC,S,mCAK3BpB,GAAQ,IAAD,OAClBA,EAAMqB,iBACNhB,EAAMiB,OAAOtB,EAAMuB,OAAOC,OAAOT,MAAK,YAAe,IAAZU,EAAW,EAAXA,KACvCC,OAAOC,OAAOF,GAAMG,SAAQ,SAAAC,GAC1BC,QAAQC,IAAIF,GACZ,IAAIG,EAAQ,YAAO,EAAKrB,MAAMC,QAC9BoB,EAASC,KAAK,CACZ9B,KAAM0B,EAAI1B,KACV+B,QAASL,EAAIM,WACbC,QAASP,EAAIO,QACVC,MAAM,KACNC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QAAQ,KAAM,MAAQ,OACjCC,KAAK,cAEV,EAAKC,SAAS,CAAE9B,OAAQoB,Y,+BAM5B,OACE,yBAAKW,UAAU,OACb,kBAAC,EAAD,CAAM1C,aAAc2C,KAAK3C,eACxB2C,KAAKjC,MAAMC,OACVgC,KAAKjC,MAAMC,OAAO0B,KAAI,SAAAO,GAAK,OACzB,yBAAKC,MAAM,MAAMC,IAAKF,EAAMT,SAC1B,4BAAKS,EAAM1C,MACX,4BAAK0C,EAAMX,SACX,2BAAIW,EAAMT,aAId,6D,GAnDQY,aCNlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,gBCN1BC,EAAOC,QAAU,CAAEhD,WAHA,aAGYC,UAFb,qC","file":"static/js/main.f374d4a2.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Form = props => {\n  return (\n    <form\n      onChange={event => {\n        props.handleChange(event);\n      }}\n    >\n      <label htmlFor=\"search\">Search For An Emoji: </label>\n      <input name=\"search\" type=\"text\" />\n    </form>\n  );\n};\n","import React, { Component } from 'react';\nimport { Form } from './Form';\nimport './styles/index.css';\nimport { algoliaKey, searchKey } from './secrets.js';\n\nimport algoliasearch from 'algoliasearch';\n\nconst client = algoliasearch(algoliaKey, searchKey);\n\nconst index = client.initIndex('emojis');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { emojis: [] };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://alg.li/emojis.json')\n      .then(function(response) {\n        return response.json();\n      })\n      .then(function(products) {\n        return index.saveObjects(products, {\n          autoGenerateObjectIDIfNotExist: true,\n        });\n      });\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    index.search(event.target.value).then(({ hits }) => {\n      Object.values(hits).forEach(hit => {\n        console.log(hit);\n        let newState = [...this.state.emojis];\n        newState.push({\n          name: hit.name,\n          descrip: hit.definition,\n          unicode: hit.unicode\n            .split(' ')\n            .map(x => x.replace('U+', '&#') + ';')\n            .join('&#x200D;'),\n        });\n        this.setState({ emojis: newState });\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form handleChange={this.handleChange} />\n        {this.state.emojis ? (\n          this.state.emojis.map(emoji => (\n            <div class=\"row\" key={emoji.unicode}>\n              <h4>{emoji.name}</h4>\n              <h5>{emoji.descrip}</h5>\n              <p>{emoji.unicode}</p>\n            </div>\n          ))\n        ) : (\n          <div>Search for some emojis!</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","const algoliaKey = 'TQU82WY8YX';\nconst searchKey = '9dd327759a53b678a1d1f1020df5ea11';\n\nmodule.exports = { algoliaKey, searchKey };\n"],"sourceRoot":""}