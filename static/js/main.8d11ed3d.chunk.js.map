{"version":3,"sources":["Form.js","Emoji.js","App.js","index.js","secrets.js"],"names":["Form","props","onChange","event","handleChange","onSubmit","preventDefault","htmlFor","name","type","Emoji","emojis","className","map","emoji","key","unicode","descrip","index","algoliasearch","algoliaKey","searchKey","initIndex","App","state","bind","fetch","then","response","json","products","saveObjects","autoGenerateObjectIDIfNotExist","search","target","value","hits","newState","Object","values","forEach","hit","console","log","push","definition","split","x","replace","join","setState","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yPAEaA,EAAO,SAAAC,GAClB,OACE,0BACEC,SAAU,SAAAC,GACRF,EAAMG,aAAaD,IAErBE,SAAU,SAAAF,GACRA,EAAMG,mBAGR,2BAAOC,QAAQ,UACb,uDAEF,2BAAOC,KAAK,SAASC,KAAK,WCbnBC,EAAQ,SAAAT,GACnB,OAAOA,EAAMU,OACX,yBAAKC,UAAU,QACb,yBAAKA,UAAU,WACb,wBAAIA,UAAU,QAAd,SACA,wBAAIA,UAAU,QAAd,gBACA,wBAAIA,UAAU,QAAd,aAGDX,EAAMU,OAAOE,KAAI,SAAAC,GAAK,OACrB,yBAAKF,UAAU,MAAMG,IAAKD,EAAME,SAC9B,uBAAGJ,UAAU,QAAQE,EAAMN,MAC3B,uBAAGI,UAAU,QAAQE,EAAMG,SAC3B,uBAAGL,UAAU,QAAQE,EAAME,cAQjC,yD,cCbEE,E,MAFSC,GAAcC,aAAYC,aAEpBC,UAAU,UAwDhBC,E,kDArDb,WAAYtB,GAAQ,IAAD,8BACjB,cAAMA,IACDuB,MAAQ,CAAEb,OAAQ,IACvB,EAAKP,aAAe,EAAKA,aAAaqB,KAAlB,gBAHH,E,gEAOjBC,MAAM,8BACHC,MAAK,SAASC,GACb,OAAOA,EAASC,UAEjBF,MAAK,SAASG,GACb,OAAOZ,EAAMa,YAAYD,EAAU,CACjCE,gCAAgC,S,mCAK3B7B,GAAQ,IAAD,OAClBA,EAAMG,iBACNY,EAAMe,OAAO9B,EAAM+B,OAAOC,OAAOR,MAAK,YAAe,IAAZS,EAAW,EAAXA,KACnCC,EAAW,GACfC,OAAOC,OAAOH,GAAMI,SAAQ,SAAAC,GAC1BC,QAAQC,IAAIF,GACZJ,EAASO,KAAK,CACZpC,KAAMiC,EAAIjC,KACVS,QAASwB,EAAII,WACVC,MAAM,KACNjC,KAAI,SAAAkC,GAAC,OAAIA,EAAEC,QAAQ,KAAM,OACzBnC,KAAI,SAAAkC,GAAC,OAAIA,EAAEC,QAAQ,IAAK,OACxBC,KAAK,KAKRjC,QAASyB,EAAIzB,aAGjB,EAAKkC,SAAS,CAAEvC,OAAQ0B,S,+BAK1B,OACE,yBAAKzB,UAAU,OACb,wBAAIA,UAAU,UAAd,qDACA,kBAAC,EAAD,CAAMR,aAAc+C,KAAK/C,eACzB,kBAAC,EAAD,CAAOO,OAAQwC,KAAK3B,MAAMb,c,GAhDhByC,aCPlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,gBCN1BC,EAAOC,QAAU,CAAEvC,WAHA,aAGYC,UAFb,qC","file":"static/js/main.8d11ed3d.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Form = props => {\n  return (\n    <form\n      onChange={event => {\n        props.handleChange(event);\n      }}\n      onSubmit={event => {\n        event.preventDefault();\n      }}\n    >\n      <label htmlFor=\"search\">\n        <big>Search For An Emoji: </big>\n      </label>\n      <input name=\"search\" type=\"text\" />\n    </form>\n  );\n};\n","import React from 'react';\n\nexport const Emoji = props => {\n  return props.emojis ? (\n    <div className=\"grid\">\n      <div className=\"top row\">\n        <h4 className=\"item\">Name:</h4>\n        <h4 className=\"item\">Description:</h4>\n        <h4 className=\"item\">Unicode:</h4>\n        {/* <h4 className=\"item\">Emoji:</h4> */}\n      </div>\n      {props.emojis.map(emoji => (\n        <div className=\"row\" key={emoji.unicode}>\n          <p className=\"item\">{emoji.name}</p>\n          <p className=\"item\">{emoji.descrip}</p>\n          <p className=\"item\">{emoji.unicode}</p>\n          {/* {!emoji.unicode.split(' ')[1] && (\n            <p className=\"item\">{emoji.unicode.replace('U+', '&#x') + ';'}</p>\n          )} */}\n        </div>\n      ))}\n    </div>\n  ) : (\n    <div>Search for some emojis!</div>\n  );\n};\n","import React, { Component } from 'react';\nimport { Form } from './Form';\nimport { Emoji } from './Emoji';\nimport './styles/index.css';\nimport { algoliaKey, searchKey } from './secrets.js';\n\nimport algoliasearch from 'algoliasearch';\n\nconst client = algoliasearch(algoliaKey, searchKey);\n\nconst index = client.initIndex('emojis');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { emojis: [] };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://alg.li/emojis.json')\n      .then(function(response) {\n        return response.json();\n      })\n      .then(function(products) {\n        return index.saveObjects(products, {\n          autoGenerateObjectIDIfNotExist: true,\n        });\n      });\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    index.search(event.target.value).then(({ hits }) => {\n      let newState = [];\n      Object.values(hits).forEach(hit => {\n        console.log(hit);\n        newState.push({\n          name: hit.name,\n          descrip: hit.definition\n            .split(' ')\n            .map(x => x.replace('??', ''))\n            .map(x => x.replace('?', ''))\n            .join(' '),\n          // unicode: hit.unicode\n          //   .split(' ')\n          //   .map(x => x.replace('U+', '&#') + ';')\n          //   .join('&#x200D;'),\n          unicode: hit.unicode,\n        });\n      });\n      this.setState({ emojis: newState });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"header\">Let's Learn About Some Emojis Today! ðŸ™‚</h1>\n        <Form handleChange={this.handleChange} />\n        <Emoji emojis={this.state.emojis} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","const algoliaKey = 'TQU82WY8YX';\nconst searchKey = '9dd327759a53b678a1d1f1020df5ea11';\n\nmodule.exports = { algoliaKey, searchKey };\n"],"sourceRoot":""}